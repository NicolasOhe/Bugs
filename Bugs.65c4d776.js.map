{"mappings":"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GACA,GACA,GACA,EACD,GACC,EACD,EACA,GACC,IAIU8G,EAAU,IAAIC,WAAW,CACpC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAIWC,EAAU,IAAIhH,aAAa,CACtC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACC,EACD,EACA,GACC,EACD,EACA,GACC,EACD,EACA,GACC,EACD,EACA,EACA,GACC,EACD,EACA,GACC,EACD,EACA,GACC,EACD,EACA,GACC,EACD,EACA,EACA,GACC,EACD,EACA,GACC,EACD,EACA,GACC,EACD,EACA,GACC,8KClMkBiH,aACnB,SAAAA,iGAAcC,CAAA7J,KAAA4J,GACZ5J,KAAK8J,QAAU,KACf9J,KAAK+J,aAAe,KACpB/J,KAAKgK,kBAAoB,KACzBhK,KAAKiK,YAAc,KACnBjK,KAAKkK,WAAa,KAClBlK,KAAKmK,QAAU,KACfnK,KAAKoK,SAAW,KAChBpK,KAAKqK,YAAc,KACnBrK,KAAKsK,QAAU,KACftK,KAAKuK,eAAiB,KACtBvK,KAAKwK,aAAe,KACpBxK,KAAKyK,iBAAmB,KACxBzK,KAAK0K,eAAiB,KACtB1K,KAAK2K,GAAK,KACV3K,KAAK4K,MAAQ,KACb5K,KAAK6K,WAAa,0DAGdD,EAAOC,EAAYC,EAAWC,GAClC,IAAMJ,EAAKC,EAAMD,GACjB3K,KAAK2K,GAAKC,EAAMD,GAChB3K,KAAK4K,MAAQA,EACb5K,KAAK6K,WAAaA,EAsGlB7K,KAAK8J,QAAU9J,KAAKgL,eAAeL,EA5CjB,otCAgCE,6LAapBA,EAAGM,WAAWjL,KAAK8J,SAGnB9J,KAAK+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","sources":["./src/tools/stats.js","./src/tools/cuon-matrix.js","./src/tools/cube.js","./src/tools/webglelement.js","./src/tools/qtree.js","./src/world/entities/base.js","./src/world/entities/vehicles/vehicle.js","./src/world/entities/vehicles/speciesContainer.js","./src/world/entities/vehicles/guards.js","./src/world/entities/ground.js","./src/world/entities/vehicles/killers.js","./src/world/entities/vehicles/bugs.js","./src/world/world.js","./src/index.js"],"sourcesContent":["export default class Stats {\n  constructor(range, selector) {\n    this.total = 0\n    this.elements = []\n    this.register = {}\n    if (range == null) throw new Error('The stats class needs a range!')\n    this.range = range\n    this.last = 0\n    this.count = 0\n    this.domElement = this.linkToDOM(selector)\n  }\n\n  linkToDOM(selector) {\n    let el = document.querySelector(selector)\n    if (!el) {\n      console.warn(\n        'Stats: no selector was provided. A <p> element was added to the end of <body>'\n      )\n      el = document.createElement('p')\n      document.querySelector('body').appendChild(el)\n    }\n    return el\n  }\n\n  tick(time) {\n    if (typeof time !== 'number') return 0\n    this.count++\n    const change = time - this.last\n    this.elements.push(change)\n\n    this.total += change\n    this.last = time\n\n    if (this.count > this.range) {\n      this.total -= this.elements.shift()\n    }\n\n    if (this.count % this.range === 0) {\n      this.updateDom()\n    }\n\n    return change\n  }\n\n  add(name, value) {\n    if (typeof value !== 'number') return\n\n    if (!this.register[name]) {\n      this.register[name] = { elements: [], last: 0, count: 0, total: 0 }\n    }\n    const loc = this.register[name]\n\n    loc.elements.push(value)\n    loc.total += value\n    loc.count++\n\n    if (loc.count > this.range) {\n      loc.total -= loc.elements.shift()\n      loc.count--\n    }\n  }\n\n  updateDom() {\n    const average = Math.round(1000 / (this.total / this.range))\n    let message = `${average} fps`\n\n    for (let prop of Object.keys(this.register)) {\n      const loc = this.register[prop]\n      const average = Math.round(loc.total / loc.count)\n      message = message + `; ${prop}: ${average}`\n    }\n\n    this.domElement.innerHTML = message\n  }\n}\n","// cuon-matrix.js (c) 2012 kanda and matsuda\n/**\n * 4x4の行列を実装したクラス。\n * OpenGLの行列スタックと同等の機能を備えている。\n * 変換後の行列は、変換行列を右からかけることで計算される。\n * 計算した結果で、行列の内容が置き換えられる。\n */\n\n/**\n * Matrix4のコンストラクタ。\n * 新しく生成される行列は、opt_srcにMatrix4のインスタンスが渡された場合、その要素がコピーされて初期化される。\n * それ以外の場合、単位行列に初期化される。\n * @param opt_src 要素をコピーしてくる行列（オプション）\n */\nexport var Matrix4 = function (opt_src) {\n  var i, s, d\n  if (\n    opt_src &&\n    typeof opt_src === 'object' &&\n    opt_src.hasOwnProperty('elements')\n  ) {\n    s = opt_src.elements\n    d = new Float32Array(16)\n    for (i = 0; i < 16; ++i) {\n      d[i] = s[i]\n    }\n    this.elements = d\n  } else {\n    this.elements = new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n    ])\n  }\n}\n\n/**\n * 単位行列に設定する。\n * @return this\n */\nMatrix4.prototype.setIdentity = function () {\n  var e = this.elements\n  e[0] = 1\n  e[4] = 0\n  e[8] = 0\n  e[12] = 0\n  e[1] = 0\n  e[5] = 1\n  e[9] = 0\n  e[13] = 0\n  e[2] = 0\n  e[6] = 0\n  e[10] = 1\n  e[14] = 0\n  e[3] = 0\n  e[7] = 0\n  e[11] = 0\n  e[15] = 1\n  return this\n}\n\n/**\n * 渡された行列の要素をコピーする。\n * @param src 要素をコピーしてくる行列\n * @return this\n */\nMatrix4.prototype.set = function (src) {\n  var i, s, d\n\n  s = src.elements\n  d = this.elements\n\n  if (s === d) {\n    return\n  }\n\n  for (i = 0; i < 16; ++i) {\n    d[i] = s[i]\n  }\n\n  return this\n}\n\n/**\n * 渡された行列を右からかける。\n * @param other かける行列\n * @return this\n */\nMatrix4.prototype.concat = function (other) {\n  var i, e, a, b, ai0, ai1, ai2, ai3\n\n  // e = a * b を計算する\n  e = this.elements\n  a = this.elements\n  b = other.elements\n\n  // eとbが同じ場合、bの内容を一時的な配列にコピーする\n  if (e === b) {\n    b = new Float32Array(16)\n    for (i = 0; i < 16; ++i) {\n      b[i] = e[i]\n    }\n  }\n\n  for (i = 0; i < 4; i++) {\n    ai0 = a[i]\n    ai1 = a[i + 4]\n    ai2 = a[i + 8]\n    ai3 = a[i + 12]\n    e[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3]\n    e[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7]\n    e[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11]\n    e[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15]\n  }\n\n  return this\n}\nMatrix4.prototype.multiply = Matrix4.prototype.concat\n\n/**\n * 渡されたベクトルをかける。\n * @param pos かける行列\n * @return この行列を掛けた結果(Float32Array)\n */\nMatrix4.prototype.multiplyVector3 = function (pos) {\n  var e = this.elements\n  var p = pos.elements\n  var v = new Vector3()\n  var result = v.elements\n\n  result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[8] + e[11]\n  result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[9] + e[12]\n  result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + e[13]\n\n  return v\n}\n\n/**\n * 渡されたベクトルをかける。\n * @param pos かける行列\n * @return この行列を掛けた結果(Float32Array)\n */\nMatrix4.prototype.multiplyVector4 = function (pos) {\n  var e = this.elements\n  var p = pos.elements\n  var v = new Vector4()\n  var result = v.elements\n\n  result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[8] + p[3] * e[12]\n  result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[9] + p[3] * e[13]\n  result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + p[3] * e[14]\n  result[3] = p[0] * e[3] + p[1] * e[7] + p[2] * e[11] + p[3] * e[15]\n\n  return v\n}\n\n/**\n * 行列を転置する。\n * @return this\n */\nMatrix4.prototype.transpose = function () {\n  var e, t\n\n  e = this.elements\n\n  t = e[1]\n  e[1] = e[4]\n  e[4] = t\n  t = e[2]\n  e[2] = e[8]\n  e[8] = t\n  t = e[3]\n  e[3] = e[12]\n  e[12] = t\n  t = e[6]\n  e[6] = e[9]\n  e[9] = t\n  t = e[7]\n  e[7] = e[13]\n  e[13] = t\n  t = e[11]\n  e[11] = e[14]\n  e[14] = t\n\n  return this\n}\n\n/**\n * 渡された行列の逆行列を計算して、この行列に代入する。\n * @param other 逆行列を計算する行列\n * @return this\n */\nMatrix4.prototype.setInverseOf = function (other) {\n  var i, s, d, inv, det\n\n  s = other.elements\n  d = this.elements\n  inv = new Float32Array(16)\n\n  inv[0] =\n    s[5] * s[10] * s[15] -\n    s[5] * s[11] * s[14] -\n    s[9] * s[6] * s[15] +\n    s[9] * s[7] * s[14] +\n    s[13] * s[6] * s[11] -\n    s[13] * s[7] * s[10]\n  inv[4] =\n    -s[4] * s[10] * s[15] +\n    s[4] * s[11] * s[14] +\n    s[8] * s[6] * s[15] -\n    s[8] * s[7] * s[14] -\n    s[12] * s[6] * s[11] +\n    s[12] * s[7] * s[10]\n  inv[8] =\n    s[4] * s[9] * s[15] -\n    s[4] * s[11] * s[13] -\n    s[8] * s[5] * s[15] +\n    s[8] * s[7] * s[13] +\n    s[12] * s[5] * s[11] -\n    s[12] * s[7] * s[9]\n  inv[12] =\n    -s[4] * s[9] * s[14] +\n    s[4] * s[10] * s[13] +\n    s[8] * s[5] * s[14] -\n    s[8] * s[6] * s[13] -\n    s[12] * s[5] * s[10] +\n    s[12] * s[6] * s[9]\n\n  inv[1] =\n    -s[1] * s[10] * s[15] +\n    s[1] * s[11] * s[14] +\n    s[9] * s[2] * s[15] -\n    s[9] * s[3] * s[14] -\n    s[13] * s[2] * s[11] +\n    s[13] * s[3] * s[10]\n  inv[5] =\n    s[0] * s[10] * s[15] -\n    s[0] * s[11] * s[14] -\n    s[8] * s[2] * s[15] +\n    s[8] * s[3] * s[14] +\n    s[12] * s[2] * s[11] -\n    s[12] * s[3] * s[10]\n  inv[9] =\n    -s[0] * s[9] * s[15] +\n    s[0] * s[11] * s[13] +\n    s[8] * s[1] * s[15] -\n    s[8] * s[3] * s[13] -\n    s[12] * s[1] * s[11] +\n    s[12] * s[3] * s[9]\n  inv[13] =\n    s[0] * s[9] * s[14] -\n    s[0] * s[10] * s[13] -\n    s[8] * s[1] * s[14] +\n    s[8] * s[2] * s[13] +\n    s[12] * s[1] * s[10] -\n    s[12] * s[2] * s[9]\n\n  inv[2] =\n    s[1] * s[6] * s[15] -\n    s[1] * s[7] * s[14] -\n    s[5] * s[2] * s[15] +\n    s[5] * s[3] * s[14] +\n    s[13] * s[2] * s[7] -\n    s[13] * s[3] * s[6]\n  inv[6] =\n    -s[0] * s[6] * s[15] +\n    s[0] * s[7] * s[14] +\n    s[4] * s[2] * s[15] -\n    s[4] * s[3] * s[14] -\n    s[12] * s[2] * s[7] +\n    s[12] * s[3] * s[6]\n  inv[10] =\n    s[0] * s[5] * s[15] -\n    s[0] * s[7] * s[13] -\n    s[4] * s[1] * s[15] +\n    s[4] * s[3] * s[13] +\n    s[12] * s[1] * s[7] -\n    s[12] * s[3] * s[5]\n  inv[14] =\n    -s[0] * s[5] * s[14] +\n    s[0] * s[6] * s[13] +\n    s[4] * s[1] * s[14] -\n    s[4] * s[2] * s[13] -\n    s[12] * s[1] * s[6] +\n    s[12] * s[2] * s[5]\n\n  inv[3] =\n    -s[1] * s[6] * s[11] +\n    s[1] * s[7] * s[10] +\n    s[5] * s[2] * s[11] -\n    s[5] * s[3] * s[10] -\n    s[9] * s[2] * s[7] +\n    s[9] * s[3] * s[6]\n  inv[7] =\n    s[0] * s[6] * s[11] -\n    s[0] * s[7] * s[10] -\n    s[4] * s[2] * s[11] +\n    s[4] * s[3] * s[10] +\n    s[8] * s[2] * s[7] -\n    s[8] * s[3] * s[6]\n  inv[11] =\n    -s[0] * s[5] * s[11] +\n    s[0] * s[7] * s[9] +\n    s[4] * s[1] * s[11] -\n    s[4] * s[3] * s[9] -\n    s[8] * s[1] * s[7] +\n    s[8] * s[3] * s[5]\n  inv[15] =\n    s[0] * s[5] * s[10] -\n    s[0] * s[6] * s[9] -\n    s[4] * s[1] * s[10] +\n    s[4] * s[2] * s[9] +\n    s[8] * s[1] * s[6] -\n    s[8] * s[2] * s[5]\n\n  det = s[0] * inv[0] + s[1] * inv[4] + s[2] * inv[8] + s[3] * inv[12]\n  if (det === 0) {\n    return this\n  }\n\n  det = 1 / det\n  for (i = 0; i < 16; i++) {\n    d[i] = inv[i] * det\n  }\n\n  return this\n}\n\n/**\n * この行列の逆行列を計算して、内容を置き換える。\n * @return this\n */\nMatrix4.prototype.invert = function () {\n  return this.setInverseOf(this)\n}\n\n/**\n * 正射影行列に設定する。\n * @param left 左クリップ平面のX座標\n * @param right 右クリップ平面のX座標\n * @param bottom 下クリップ平面のY座標\n * @param top 上クリップ平面のY座標\n * @param near 近クリップ平面までの距離。平面が視点の後方にある場合は負数\n * @param far 遠クリップ平面までの距離。平面が視点の後方にある場合は負数\n * @return this\n */\nMatrix4.prototype.setOrtho = function (left, right, bottom, top, near, far) {\n  var e, rw, rh, rd\n\n  if (left === right || bottom === top || near === far) {\n    throw 'null frustum'\n  }\n\n  rw = 1 / (right - left)\n  rh = 1 / (top - bottom)\n  rd = 1 / (far - near)\n\n  e = this.elements\n\n  e[0] = 2 * rw\n  e[1] = 0\n  e[2] = 0\n  e[3] = 0\n\n  e[4] = 0\n  e[5] = 2 * rh\n  e[6] = 0\n  e[7] = 0\n\n  e[8] = 0\n  e[9] = 0\n  e[10] = -2 * rd\n  e[11] = 0\n\n  e[12] = -(right + left) * rw\n  e[13] = -(top + bottom) * rh\n  e[14] = -(far + near) * rd\n  e[15] = 1\n\n  return this\n}\n\n/**\n * 正射影行列を右からかける。\n * @param left 左クリップ平面のX座標\n * @param right 右クリップ平面のX座標\n * @param bottom 下クリップ平面のY座標\n * @param top 上クリップ平面のY座標\n * @param near 近クリップ平面までの距離。平面が視点の後方にある場合は負数\n * @param far 遠クリップ平面までの距離。平面が視点の後方にある場合は負数\n * @return this\n */\nMatrix4.prototype.ortho = function (left, right, bottom, top, near, far) {\n  return this.concat(\n    new Matrix4().setOrtho(left, right, bottom, top, near, far)\n  )\n}\n\n/**\n * 透視射影行列に設定する\n * @param left 近クリップ平面上における左クリップ平面のX座標\n * @param right 近クリップ平面上における右クリップ平面のX座標\n * @param bottom 近クリップ平面上における下クリップ平面のY座標\n * @param top 近クリップ平面上における上クリップ平面のY座標\n * @param near 近クリップ平面までの距離。正数でなくてはならない\n * @param far 遠クリップ平面までの距離。正数でなくてはならない\n * @return this\n */\nMatrix4.prototype.setFrustum = function (left, right, bottom, top, near, far) {\n  var e, rw, rh, rd\n\n  if (left === right || top === bottom || near === far) {\n    throw 'null frustum'\n  }\n  if (near <= 0) {\n    throw 'near <= 0'\n  }\n  if (far <= 0) {\n    throw 'far <= 0'\n  }\n\n  rw = 1 / (right - left)\n  rh = 1 / (top - bottom)\n  rd = 1 / (far - near)\n\n  e = this.elements\n\n  e[0] = 2 * near * rw\n  e[1] = 0\n  e[2] = 0\n  e[3] = 0\n\n  e[4] = 0\n  e[5] = 2 * near * rh\n  e[6] = 0\n  e[7] = 0\n\n  e[8] = (right + left) * rw\n  e[9] = (top + bottom) * rh\n  e[10] = -(far + near) * rd\n  e[11] = -1\n\n  e[12] = 0\n  e[13] = 0\n  e[14] = -2 * near * far * rd\n  e[15] = 0\n\n  return this\n}\n\n/**\n * 透視射影行列を右からかける。\n * @param left 近クリップ平面上における左クリップ平面のX座標\n * @param right 近クリップ平面上における右クリップ平面のX座標\n * @param bottom 近クリップ平面上における下クリップ平面のY座標\n * @param top 近クリップ平面上における上クリップ平面のY座標\n * @param near 近クリップ平面までの距離。正数でなくてはならない\n * @param far 遠クリップ平面までの距離。正数でなくてはならない\n * @return this\n */\nMatrix4.prototype.frustum = function (left, right, bottom, top, near, far) {\n  return this.concat(\n    new Matrix4().setFrustum(left, right, bottom, top, near, far)\n  )\n}\n\n/**\n * 視野角、アスペクト比を指定して透視射影行列に設定する。\n * @param fovy 垂直視野角 [度]\n * @param aspect 視野のアスペクト比（幅 / 高さ）\n * @param near 近クリップ平面までの距離。正数でなくてはならない\n * @param far 遠クリップ平面までの距離。正数でなくてはならない\n * @return this\n */\nMatrix4.prototype.setPerspective = function (fovy, aspect, near, far) {\n  var e, rd, s, ct\n\n  if (near === far || aspect === 0) {\n    throw 'null frustum'\n  }\n  if (near <= 0) {\n    throw 'near <= 0'\n  }\n  if (far <= 0) {\n    throw 'far <= 0'\n  }\n\n  fovy = (Math.PI * fovy) / 180 / 2\n  s = Math.sin(fovy)\n  if (s === 0) {\n    throw 'null frustum'\n  }\n\n  rd = 1 / (far - near)\n  ct = Math.cos(fovy) / s\n\n  e = this.elements\n\n  e[0] = ct / aspect\n  e[1] = 0\n  e[2] = 0\n  e[3] = 0\n\n  e[4] = 0\n  e[5] = ct\n  e[6] = 0\n  e[7] = 0\n\n  e[8] = 0\n  e[9] = 0\n  e[10] = -(far + near) * rd\n  e[11] = -1\n\n  e[12] = 0\n  e[13] = 0\n  e[14] = -2 * near * far * rd\n  e[15] = 0\n\n  return this\n}\n\n/**\n * 透視射影行列を右からかける。\n * @param fovy 垂直視野角 [度]\n * @param aspect 視野のアスペクト比（幅 / 高さ）\n * @param near 近クリップ平面までの距離。正数でなくてはならない\n * @param far 遠クリップ平面までの距離。正数でなくてはならない\n * @return this\n */\nMatrix4.prototype.perspective = function (fovy, aspect, near, far) {\n  return this.concat(new Matrix4().setPerspective(fovy, aspect, near, far))\n}\n\n/**\n * スケーリング行列に設定する。\n * @param x X方向の倍率\n * @param y Y方向の倍率\n * @param z Z方向の倍率\n * @return this\n */\nMatrix4.prototype.setScale = function (x, y, z) {\n  var e = this.elements\n  e[0] = x\n  e[4] = 0\n  e[8] = 0\n  e[12] = 0\n  e[1] = 0\n  e[5] = y\n  e[9] = 0\n  e[13] = 0\n  e[2] = 0\n  e[6] = 0\n  e[10] = z\n  e[14] = 0\n  e[3] = 0\n  e[7] = 0\n  e[11] = 0\n  e[15] = 1\n  return this\n}\n\n/**\n * スケーリング行列を右からかける。\n * @param x X方向の倍率\n * @param y Y方向の倍率\n * @param z Z方向の倍率\n * @return this\n */\nMatrix4.prototype.scale = function (x, y, z) {\n  var e = this.elements\n  e[0] *= x\n  e[4] *= y\n  e[8] *= z\n  e[1] *= x\n  e[5] *= y\n  e[9] *= z\n  e[2] *= x\n  e[6] *= y\n  e[10] *= z\n  e[3] *= x\n  e[7] *= y\n  e[11] *= z\n  return this\n}\n\n/**\n * 平行移動行列に設定する。\n * @param x X方向の移動量\n * @param y Y方向の移動量\n * @param z Z方向の移動量\n * @return this\n */\nMatrix4.prototype.setTranslate = function (x, y, z) {\n  var e = this.elements\n  e[0] = 1\n  e[4] = 0\n  e[8] = 0\n  e[12] = x\n  e[1] = 0\n  e[5] = 1\n  e[9] = 0\n  e[13] = y\n  e[2] = 0\n  e[6] = 0\n  e[10] = 1\n  e[14] = z\n  e[3] = 0\n  e[7] = 0\n  e[11] = 0\n  e[15] = 1\n  return this\n}\n\n/**\n * 平行移動行列を右からかける。\n * @param x X方向の移動量\n * @param y Y方向の移動量\n * @param z Z方向の移動量\n * @return this\n */\nMatrix4.prototype.translate = function (x, y, z) {\n  var e = this.elements\n  e[12] += e[0] * x + e[4] * y + e[8] * z\n  e[13] += e[1] * x + e[5] * y + e[9] * z\n  e[14] += e[2] * x + e[6] * y + e[10] * z\n  e[15] += e[3] * x + e[7] * y + e[11] * z\n  return this\n}\n\n/**\n * 回転行列に設定する。\n * 回転軸の方向ベクトルは正規化されていなくても構わない。\n * @param angle 回転角 [度]\n * @param x 回転軸の方向ベクトルのX成分\n * @param y 回転軸の方向ベクトルのY成分\n * @param z 回転軸の方向ベクトルのZ成分\n * @return this\n */\nMatrix4.prototype.setRotate = function (angle, x, y, z) {\n  var e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs\n\n  angle = (Math.PI * angle) / 180\n  e = this.elements\n\n  s = Math.sin(angle)\n  c = Math.cos(angle)\n\n  if (0 !== x && 0 === y && 0 === z) {\n    // X軸まわりの回転\n    if (x < 0) {\n      s = -s\n    }\n    e[0] = 1\n    e[4] = 0\n    e[8] = 0\n    e[12] = 0\n    e[1] = 0\n    e[5] = c\n    e[9] = -s\n    e[13] = 0\n    e[2] = 0\n    e[6] = s\n    e[10] = c\n    e[14] = 0\n    e[3] = 0\n    e[7] = 0\n    e[11] = 0\n    e[15] = 1\n  } else if (0 === x && 0 !== y && 0 === z) {\n    // Y軸まわりの回転\n    if (y < 0) {\n      s = -s\n    }\n    e[0] = c\n    e[4] = 0\n    e[8] = s\n    e[12] = 0\n    e[1] = 0\n    e[5] = 1\n    e[9] = 0\n    e[13] = 0\n    e[2] = -s\n    e[6] = 0\n    e[10] = c\n    e[14] = 0\n    e[3] = 0\n    e[7] = 0\n    e[11] = 0\n    e[15] = 1\n  } else if (0 === x && 0 === y && 0 !== z) {\n    // Z軸まわりの回転\n    if (z < 0) {\n      s = -s\n    }\n    e[0] = c\n    e[4] = -s\n    e[8] = 0\n    e[12] = 0\n    e[1] = s\n    e[5] = c\n    e[9] = 0\n    e[13] = 0\n    e[2] = 0\n    e[6] = 0\n    e[10] = 1\n    e[14] = 0\n    e[3] = 0\n    e[7] = 0\n    e[11] = 0\n    e[15] = 1\n  } else {\n    // その他の任意軸まわりの回転\n    len = Math.sqrt(x * x + y * y + z * z)\n    if (len !== 1) {\n      rlen = 1 / len\n      x *= rlen\n      y *= rlen\n      z *= rlen\n    }\n    nc = 1 - c\n    xy = x * y\n    yz = y * z\n    zx = z * x\n    xs = x * s\n    ys = y * s\n    zs = z * s\n\n    e[0] = x * x * nc + c\n    e[1] = xy * nc + zs\n    e[2] = zx * nc - ys\n    e[3] = 0\n\n    e[4] = xy * nc - zs\n    e[5] = y * y * nc + c\n    e[6] = yz * nc + xs\n    e[7] = 0\n\n    e[8] = zx * nc + ys\n    e[9] = yz * nc - xs\n    e[10] = z * z * nc + c\n    e[11] = 0\n\n    e[12] = 0\n    e[13] = 0\n    e[14] = 0\n    e[15] = 1\n  }\n\n  return this\n}\n\n/**\n * 回転行列を右からかける。\n * 回転軸の方向ベクトルは正規化されていなくても構わない。\n * @param angle 回転角 [度]\n * @param x 回転軸の方向ベクトルのX成分\n * @param y 回転軸の方向ベクトルのY成分\n * @param z 回転軸の方向ベクトルのZ成分\n * @return this\n */\nMatrix4.prototype.rotate = function (angle, x, y, z) {\n  return this.concat(new Matrix4().setRotate(angle, x, y, z))\n}\n\n/**\n * 視野変換行列を設定する。\n * @param eyeX, eyeY, eyeZ 視点の位置\n * @param centerX, centerY, centerZ 標点の位置\n * @param upX, upY, upZ カメラの上方向を表す方向ベクトル\n * @return this\n */\nMatrix4.prototype.setLookAt = function (\n  eyeX,\n  eyeY,\n  eyeZ,\n  centerX,\n  centerY,\n  centerZ,\n  upX,\n  upY,\n  upZ\n) {\n  var e, fx, fy, fz, rlf, sx, sy, sz, rls, ux, uy, uz\n\n  fx = centerX - eyeX\n  fy = centerY - eyeY\n  fz = centerZ - eyeZ\n\n  // fを正規化する\n  rlf = 1 / Math.sqrt(fx * fx + fy * fy + fz * fz)\n  fx *= rlf\n  fy *= rlf\n  fz *= rlf\n\n  // fとupの外積を求める\n  sx = fy * upZ - fz * upY\n  sy = fz * upX - fx * upZ\n  sz = fx * upY - fy * upX\n\n  // sを正規化する\n  rls = 1 / Math.sqrt(sx * sx + sy * sy + sz * sz)\n  sx *= rls\n  sy *= rls\n  sz *= rls\n\n  // sとfの外積を求める\n  ux = sy * fz - sz * fy\n  uy = sz * fx - sx * fz\n  uz = sx * fy - sy * fx\n\n  // 代入する\n  e = this.elements\n  e[0] = sx\n  e[1] = ux\n  e[2] = -fx\n  e[3] = 0\n\n  e[4] = sy\n  e[5] = uy\n  e[6] = -fy\n  e[7] = 0\n\n  e[8] = sz\n  e[9] = uz\n  e[10] = -fz\n  e[11] = 0\n\n  e[12] = 0\n  e[13] = 0\n  e[14] = 0\n  e[15] = 1\n\n  // 平行移動する\n  return this.translate(-eyeX, -eyeY, -eyeZ)\n}\n\n/**\n * 視野変換行列を右からかける。\n * @param eyeX, eyeY, eyeZ 視点の位置\n * @param centerX, centerY, centerZ 標点の位置\n * @param upX, upY, upZ カメラの上方向を表す方向ベクトル\n * @return this\n */\nMatrix4.prototype.lookAt = function (\n  eyeX,\n  eyeY,\n  eyeZ,\n  centerX,\n  centerY,\n  centerZ,\n  upX,\n  upY,\n  upZ\n) {\n  return this.concat(\n    new Matrix4().setLookAt(\n      eyeX,\n      eyeY,\n      eyeZ,\n      centerX,\n      centerY,\n      centerZ,\n      upX,\n      upY,\n      upZ\n    )\n  )\n}\n\n/**\n * 頂点を平面上に射影するような行列を右からかける。\n * @param plane 平面方程式 Ax + By + Cz + D = 0 の係数[A, B, C, D]を格納した配列\n * @param light 光源の同次座標を格納した配列。light[3]=0の場合、平行光源を表す\n * @return this\n */\nMatrix4.prototype.dropShadow = function (plane, light) {\n  var mat = new Matrix4()\n  var e = mat.elements\n\n  var dot =\n    plane[0] * light[0] +\n    plane[1] * light[1] +\n    plane[2] * light[2] +\n    plane[3] * light[3]\n\n  e[0] = dot - light[0] * plane[0]\n  e[1] = -light[1] * plane[0]\n  e[2] = -light[2] * plane[0]\n  e[3] = -light[3] * plane[0]\n\n  e[4] = -light[0] * plane[1]\n  e[5] = dot - light[1] * plane[1]\n  e[6] = -light[2] * plane[1]\n  e[7] = -light[3] * plane[1]\n\n  e[8] = -light[0] * plane[2]\n  e[9] = -light[1] * plane[2]\n  e[10] = dot - light[2] * plane[2]\n  e[11] = -light[3] * plane[2]\n\n  e[12] = -light[0] * plane[3]\n  e[13] = -light[1] * plane[3]\n  e[14] = -light[2] * plane[3]\n  e[15] = dot - light[3] * plane[3]\n\n  return this.concat(mat)\n}\n\n/**\n * 平行光源により頂点を平面上に射影するような行列を右からかける。\n * @param normX, normY, normZ 平面の法線ベクトル（正規化されている必要はない）\n * @param planeX, planeY, planeZ 平面上の点\n * @param lightX, lightY, lightZ ライトの方向（正規化されている必要はない）\n * @return this\n */\nMatrix4.prototype.dropShadowDirectionally = function (\n  normX,\n  normY,\n  normZ,\n  planeX,\n  planeY,\n  planeZ,\n  lightX,\n  lightY,\n  lightZ\n) {\n  var a = planeX * normX + planeY * normY + planeZ * normZ\n  return this.dropShadow([normX, normY, normZ, -a], [lightX, lightY, lightZ, 0])\n}\n\n/**\n * Vector3のコンストラクタ\n * 引数を指定するとその内容がコピーされる\n * @param opt_src 要素をコピーしてくるベクトル（オプション）\n */\nexport const Vector3 = function (opt_src) {\n  var v = new Float32Array(3)\n  if (opt_src && typeof opt_src === 'object') {\n    v[0] = opt_src[0]\n    v[1] = opt_src[1]\n    v[2] = opt_src[2]\n  }\n  this.elements = v\n}\n\n/**\n * 正規化する。\n * @return this\n */\nVector3.prototype.normalize = function () {\n  var v = this.elements\n  var c = v[0],\n    d = v[1],\n    e = v[2],\n    g = Math.sqrt(c * c + d * d + e * e)\n  if (g) {\n    if (g == 1) return this\n  } else {\n    v[0] = 0\n    v[1] = 0\n    v[2] = 0\n    return this\n  }\n  g = 1 / g\n  v[0] = c * g\n  v[1] = d * g\n  v[2] = e * g\n  return this\n}\n\n/**\n * Vector4のコンストラクタ\n * 引数を指定するとその内容がコピーされる\n * @param opt_src 要素をコピーしてくるベクトル（オプション）\n */\nvar Vector4 = function (opt_src) {\n  var v = new Float32Array(4)\n  if (opt_src && typeof opt_src === 'object') {\n    v[0] = opt_src[0]\n    v[1] = opt_src[1]\n    v[2] = opt_src[2]\n    v[3] = opt_src[3]\n  }\n  this.elements = v\n}\n","// Create a cube\n//    v6----- v5\n//   /|      /|\n//  v1------v0|\n//  | |     | |\n//  | |v7---|-|v4\n//  |/      |/\n//  v2------v3\nexport const vertices = new Float32Array([\n  1.0,\n  1.0,\n  1.0,\n  -1.0,\n  1.0,\n  1.0,\n  -1.0,\n  -1.0,\n  1.0,\n  1.0,\n  -1.0,\n  1.0, // v0-v1-v2-v3 front\n  1.0,\n  1.0,\n  1.0,\n  1.0,\n  -1.0,\n  1.0,\n  1.0,\n  -1.0,\n  -1.0,\n  1.0,\n  1.0,\n  -1.0, // v0-v3-v4-v5 right\n  1.0,\n  1.0,\n  1.0,\n  1.0,\n  1.0,\n  -1.0,\n  -1.0,\n  1.0,\n  -1.0,\n  -1.0,\n  1.0,\n  1.0, // v0-v5-v6-v1 up\n  -1.0,\n  1.0,\n  1.0,\n  -1.0,\n  1.0,\n  -1.0,\n  -1.0,\n  -1.0,\n  -1.0,\n  -1.0,\n  -1.0,\n  1.0, // v1-v6-v7-v2 left\n  -1.0,\n  -1.0,\n  -1.0,\n  1.0,\n  -1.0,\n  -1.0,\n  1.0,\n  -1.0,\n  1.0,\n  -1.0,\n  -1.0,\n  1.0, // v7-v4-v3-v2 down\n  1.0,\n  -1.0,\n  -1.0,\n  -1.0,\n  -1.0,\n  -1.0,\n  -1.0,\n  1.0,\n  -1.0,\n  1.0,\n  1.0,\n  -1.0, // v4-v7-v6-v5 back\n])\n\n// Indices of the vertices\nexport const indices = new Uint8Array([\n  0,\n  1,\n  2,\n  0,\n  2,\n  3, // front\n  4,\n  5,\n  6,\n  4,\n  6,\n  7, // right\n  8,\n  9,\n  10,\n  8,\n  10,\n  11, // up\n  12,\n  13,\n  14,\n  12,\n  14,\n  15, // left\n  16,\n  17,\n  18,\n  16,\n  18,\n  19, // down\n  20,\n  21,\n  22,\n  20,\n  22,\n  23, // back\n])\n\n// Normal\nexport const normals = new Float32Array([\n  0.0,\n  0.0,\n  1.0,\n  0.0,\n  0.0,\n  1.0,\n  0.0,\n  0.0,\n  1.0,\n  0.0,\n  0.0,\n  1.0, // v0-v1-v2-v3 front\n  1.0,\n  0.0,\n  0.0,\n  1.0,\n  0.0,\n  0.0,\n  1.0,\n  0.0,\n  0.0,\n  1.0,\n  0.0,\n  0.0, // v0-v3-v4-v5 right\n  0.0,\n  1.0,\n  0.0,\n  0.0,\n  1.0,\n  0.0,\n  0.0,\n  1.0,\n  0.0,\n  0.0,\n  1.0,\n  0.0, // v0-v5-v6-v1 up\n  -1.0,\n  0.0,\n  0.0,\n  -1.0,\n  0.0,\n  0.0,\n  -1.0,\n  0.0,\n  0.0,\n  -1.0,\n  0.0,\n  0.0, // v1-v6-v7-v2 left\n  0.0,\n  -1.0,\n  0.0,\n  0.0,\n  -1.0,\n  0.0,\n  0.0,\n  -1.0,\n  0.0,\n  0.0,\n  -1.0,\n  0.0, // v7-v4-v3-v2 down\n  0.0,\n  0.0,\n  -1.0,\n  0.0,\n  0.0,\n  -1.0,\n  0.0,\n  0.0,\n  -1.0,\n  0.0,\n  0.0,\n  -1.0, // v4-v7-v6-v5 back\n])\n","import { Matrix4, Vector3 } from '../tools/cuon-matrix'\nimport { vertices, indices, normals } from '../tools/cube'\nexport default class WebGlElement {\n  constructor() {\n    this.program = null\n    this.vertexBuffer = null\n    this.vertexColorBuffer = null\n    this.indexBuffer = null\n    this.a_position = null\n    this.a_Color = null\n    this.a_Normal = null\n    this.u_MvpMatrix = null\n    this.u_Color = null\n    this.u_NormalMatrix = null\n    this.u_LightColor = null\n    this.u_LightDirection = null\n    this.u_AmbientLight = null\n    this.gl = null\n    this.world = null\n    this.entitySize = null\n  }\n\n  setup(world, entitySize, positions, colors) {\n    const gl = world.gl\n    this.gl = world.gl\n    this.world = world\n    this.entitySize = entitySize\n\n    //2D world\n    // const vertexShader = `\n    //   attribute vec4 a_Position;\n    //   attribute vec4 a_Color;\n    //   varying vec4 v_Color;\n    //   void main() {\n    //       gl_Position = a_Position*2.-1.;\n    //       gl_PointSize = ${entitySize}.;\n    //       v_Color = a_Color;\n    //   }\n    //   `\n\n    // const fragmentShader = `\n    //   precision mediump float;\n    //   varying vec4 v_Color;\n\n    //   void main() {\n    //     float dist = distance(gl_PointCoord, vec2(0.5, 0.5));\n    //     if (dist < 0.5 && dist>0.45-v_Color.r/2.) {\n    //       gl_FragColor = vec4(1.-v_Color.g, 0., v_Color.g, 1.);\n    //     } else {\n    //       discard;\n    //     }\n    //   }\n    //   `\n\n    // 3D world with points\n    // const vertexShader = `\n    //   attribute vec4 a_Position;\n    //   attribute vec4 a_Color;\n    //   uniform mat4 u_MvpMatrix;\n    //   varying vec4 v_Color;\n\n    //   void main() {\n    //       gl_Position = u_MvpMatrix * (vec4(a_Position.x* 2. -1.,0.0,a_Position.y* 2. -1., 1.) );\n    //       gl_PointSize = ${entitySize}.;\n    //       v_Color = a_Color;\n    //   }\n    //   `\n\n    // const fragmentShader = `\n    //   #ifdef GL_ES\n    //   precision mediump float;\n    //   #endif\n    //   varying vec4 v_Color;\n\n    //   void main() {\n    //     float dist = distance(gl_PointCoord, vec2(0.5, 0.5));\n    //     if (dist < 0.5 && dist>0.45-v_Color.r/2.) {\n    //       gl_FragColor = vec4(1.-v_Color.g, 0., v_Color.g, 1.);\n    //     } else {\n    //       discard;\n    //     }\n    //   }\n    //   `\n\n    const vertexShader = `\n      attribute vec4 a_Position;\n      attribute vec4 a_Normal;\n      attribute vec4 a_Color;\n      uniform mat4 u_MvpMatrix;\n      uniform vec4 u_Color;\n      uniform mat4 u_NormalMatrix;    // Transformation matrix of normal\n      uniform vec3 u_LightColor;      // Light color\n      uniform vec3 u_LightDirection;  // World coordinate, normalized\n      uniform vec3 u_AmbientLight;    // Ambient light color\n      varying vec4 v_Color;\n\n      void main() {\n          gl_Position = u_MvpMatrix * a_Position;\n          \n          // Recalculate normal with normal matrix and make its length 1.0\n          vec3 normal = normalize(vec3(u_NormalMatrix * a_Normal));\n      \n          // The dot product of the light direction and the normal\n          float nDotL = max(dot(u_LightDirection, normal), 0.0);\n      \n          // Calculate the color due to diffuse reflection\n          vec3 diffuse = u_LightColor * u_Color.rgb * nDotL;\n      \n          // Calculate the color due to ambient reflection\n          vec3 ambient = u_AmbientLight * u_Color.rgb;\n      \n          // Add the surface colors due to diffuse and ambient reflection\n          v_Color = vec4(diffuse + ambient, u_Color.a);\n      }\n      `\n\n    const fragmentShader = `\n      #ifdef GL_ES\n      precision mediump float;\n      #endif\n      varying vec4 v_Color;\n      \n      void main() {\n          gl_FragColor = v_Color;\n       \n      }\n      `\n\n    this.program = this.createProgramm(gl, vertexShader, fragmentShader)\n    gl.useProgram(this.program)\n\n    // setup vertices buffer\n    this.vertexBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW)\n    this.a_Position = gl.getAttribLocation(this.program, 'a_Position')\n\n    // setup indexes buffer\n    this.indexBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, null)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW)\n\n    // setup color buffer\n    this.vertexColorBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexColorBuffer)\n    if (colors) {\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\n    }\n    this.a_Color = gl.getAttribLocation(this.program, 'a_Color')\n\n    // setup normals buffer\n    this.normalsBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.normalsBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, normals, gl.STATIC_DRAW)\n    this.a_Normal = gl.getAttribLocation(this.program, 'a_Normal')\n\n    // setup uniforms\n    this.u_NormalMatrix = gl.getUniformLocation(this.program, 'u_NormalMatrix')\n    this.u_LightColor = gl.getUniformLocation(this.program, 'u_LightColor')\n    this.u_LightDirection = gl.getUniformLocation(\n      this.program,\n      'u_LightDirection'\n    )\n    this.u_AmbientLight = gl.getUniformLocation(this.program, 'u_AmbientLight')\n\n    const lightDirection = new Vector3([1.0, 3.0, 4.0])\n    lightDirection.normalize() // Normalize\n    gl.uniform3fv(this.u_LightDirection, lightDirection.elements)\n    gl.uniform3f(this.u_AmbientLight, 0.3, 0.3, 0.3)\n    gl.uniform3f(this.u_LightColor, 1.0, 1.0, 1.0)\n\n    this.u_MvpMatrix = gl.getUniformLocation(this.program, 'u_MvpMatrix')\n    this.u_Color = gl.getUniformLocation(this.program, 'u_Color')\n    //debugger\n  }\n\n  // 2D\n  // draw(length, newPositions, newColors) {\n  //   const { gl, program } = this\n  //   gl.useProgram(program)\n\n  //   gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n  //   if (newPositions) {\n  //     gl.bufferData(\n  //       gl.ARRAY_BUFFER,\n  //       new Float32Array(newPositions),\n  //       gl.STATIC_DRAW\n  //     )\n  //   }\n\n  //   gl.vertexAttribPointer(this.a_Position, 2, gl.FLOAT, false, 0, 0)\n  //   gl.enableVertexAttribArray(this.a_Position)\n\n  //   gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexColorBuffer)\n  //   if (newColors) {\n  //     gl.bufferData(\n  //       gl.ARRAY_BUFFER,\n  //       new Float32Array(newColors),\n  //       gl.STATIC_DRAW\n  //     )\n  //   }\n  //   gl.vertexAttribPointer(this.a_Color, 2, gl.FLOAT, false, 0, 0)\n  //   gl.enableVertexAttribArray(this.a_Color)\n\n  //   gl.drawArrays(gl.POINTS, 0, length)\n  // }\n\n  // // 3D Points\n  // draw(length, newPositions, newColors) {\n  //   const { gl, program } = this\n  //   gl.useProgram(program)\n\n  //   gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n  //   if (newPositions) {\n  //     gl.bufferData(\n  //       gl.ARRAY_BUFFER,\n  //       new Float32Array(newPositions),\n  //       gl.STATIC_DRAW\n  //     )\n  //   }\n\n  //   gl.vertexAttribPointer(this.a_Position, 2, gl.FLOAT, false, 0, 0)\n  //   gl.enableVertexAttribArray(this.a_Position)\n\n  //   const mvpMatrix = new Matrix4() // Model view projection matrix\n  //   const modelMatrix = new Matrix4() // Model matrix\n  //   mvpMatrix\n  //     .set(this.world.projMatrix)\n  //     .multiply(this.world.viewMatrix)\n  //     .multiply(modelMatrix)\n  //   // Pass the model view projection matrix to u_MvpMatrix\n  //   //debugger\n  //   gl.uniformMatrix4fv(this.u_MvpMatrix, false, mvpMatrix.elements)\n\n  //   gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexColorBuffer)\n  //   if (newColors) {\n  //     gl.bufferData(\n  //       gl.ARRAY_BUFFER,\n  //       new Float32Array(newColors),\n  //       gl.STATIC_DRAW\n  //     )\n  //   }\n  //   gl.vertexAttribPointer(this.a_Color, 2, gl.FLOAT, false, 0, 0)\n  //   gl.enableVertexAttribArray(this.a_Color)\n\n  //   gl.drawArrays(gl.POINTS, 0, length)\n  // }\n\n  draw(length, newPositions, newColors) {\n    const { gl, program } = this\n    gl.useProgram(program)\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n    gl.vertexAttribPointer(this.a_Position, 3, gl.FLOAT, false, 0, 0)\n    gl.enableVertexAttribArray(this.a_Position)\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.normalsBuffer)\n    gl.vertexAttribPointer(this.a_Normal, 3, gl.FLOAT, false, 0, 0)\n    gl.enableVertexAttribArray(this.a_Normal)\n\n    // gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexColorBuffer)\n    // if (newColors) {\n    //   gl.bufferData(\n    //     gl.ARRAY_BUFFER,\n    //     new Float32Array(newColors),\n    //     gl.STATIC_DRAW\n    //   )\n    // }\n    // gl.vertexAttribPointer(this.a_Color, 2, gl.FLOAT, false, 0, 0)\n    // gl.enableVertexAttribArray(this.a_Color)\n\n    const mvpMatrix = new Matrix4() // Model view projection matrix\n    const modelMatrix = new Matrix4() // Model matrix\n    const normalMatrix = new Matrix4() // Transformation matrix for normals\n\n    for (let i = 0; i < newPositions.length; i += 2) {\n      modelMatrix\n        .setTranslate(newPositions[i] * 2 - 1, 0, newPositions[i + 1] * 2 - 1)\n        .scale(\n          this.entitySize / 1000,\n          this.entitySize / 1000,\n          this.entitySize / 1000\n        )\n\n      mvpMatrix\n        .set(this.world.projMatrix)\n        .multiply(this.world.viewMatrix)\n        .multiply(modelMatrix)\n\n      gl.uniformMatrix4fv(this.u_MvpMatrix, false, mvpMatrix.elements)\n\n      normalMatrix.setInverseOf(modelMatrix)\n      normalMatrix.transpose()\n      // Pass the transformation matrix for normals to u_NormalMatrix\n      gl.uniformMatrix4fv(this.u_NormalMatrix, false, normalMatrix.elements)\n\n      gl.uniform4fv(\n        this.u_Color,\n        new Float32Array([newColors[i], newColors[i + 1], 0, 1])\n      )\n\n      gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_BYTE, 0)\n    }\n  }\n\n  createProgramm(gl, vertexShaderSource, fragmentShaderSource) {\n    const vertexShader = this.loadShader(\n      gl,\n      gl.VERTEX_SHADER,\n      vertexShaderSource\n    )\n    const fragmentShader = this.loadShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      fragmentShaderSource\n    )\n\n    const program = gl.createProgram()\n\n    gl.attachShader(program, vertexShader)\n    gl.attachShader(program, fragmentShader)\n\n    gl.linkProgram(program)\n\n    return program\n  }\n\n  loadShader(gl, type, source) {\n    const shader = gl.createShader(type)\n\n    gl.shaderSource(shader, source)\n\n    gl.compileShader(shader)\n\n    const isCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n    if (!isCompiled) {\n      const decodedType =\n        type === gl.VERTEX_SHADER\n          ? 'vertex'\n          : type === gl.FRAGMENT_SHADER\n          ? 'fragment'\n          : 'unknown type'\n      console.error(`The ${decodedType} shader could not be compiled`)\n    }\n\n    return shader\n  }\n\n  initAttributeVariable(gl, a_attribute, buffer) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n    gl.vertexAttribPointer(a_attribute, buffer.num, buffer.type, false, 0, 0)\n    gl.enableVertexAttribArray(a_attribute)\n  }\n}\n","export function generateQuadTree(bugs, minX, minY, maxX, maxY) {\n  const boundary = Qtree.getBoundary(minX, minY, maxX, maxY)\n\n  const qt = new Qtree(boundary)\n  for (let bug of bugs) {\n    qt.insert(bug)\n  }\n\n  return qt\n}\n\nexport class Qtree {\n  static getBoundary(minX, minY, maxX, maxY) {\n    const halfWidth = (maxX - minX) / 2\n    const halfHeight = (maxY - minY) / 2\n    const centerX = maxX - halfWidth\n    const centerY = maxY - halfHeight\n\n    const [x, y, w, h] = [centerX, centerY, halfWidth, halfHeight]\n\n    return new Rectangle(x, y, w, h)\n  }\n\n  static getQuerySurface(x, y, w, h) {\n    return new Rectangle(x, y, w / 2, h / 2)\n  }\n\n  constructor(boundary) {\n    this.boundary = boundary\n    this.bucket = []\n    this.regions = {}\n    this.divided = false\n    this.gathered = []\n  }\n\n  insert(bug) {\n    if (!this.boundary.contains(bug)) {\n      return false\n    }\n    if (!this.divided) {\n      if (this.bucket.length < Qtree.capacity) {\n        this.bucket.push(bug)\n        return true\n      }\n      this.subdivide()\n      this.transferBucket()\n    }\n\n    this.passToChild(bug)\n  }\n\n  passToChild(bug) {\n    if (bug.x > this.boundary.x) {\n      if (bug.y > this.boundary.y) {\n        return this.regions.se.insert(bug)\n      } else {\n        return this.regions.ne.insert(bug)\n      }\n    } else {\n      if (bug.y > this.boundary.y) {\n        return this.regions.sw.insert(bug)\n      } else {\n        return this.regions.nw.insert(bug)\n      }\n    }\n  }\n\n  subdivide() {\n    const { x, y } = this.boundary\n    const [hW, hH] = [this.boundary.w / 2, this.boundary.h / 2]\n    const nwSpace = new Rectangle(x - hW, y - hH, hW, hH)\n    const neSpace = new Rectangle(x + hW, y - hH, hW, hH)\n    const swSpace = new Rectangle(x - hW, y + hH, hW, hH)\n    const seSpace = new Rectangle(x + hW, y + hH, hW, hH)\n\n    this.regions.nw = new Qtree(nwSpace, Qtree.capacity)\n    this.regions.ne = new Qtree(neSpace, Qtree.capacity)\n    this.regions.sw = new Qtree(swSpace, Qtree.capacity)\n    this.regions.se = new Qtree(seSpace, Qtree.capacity)\n\n    this.divided = true\n  }\n\n  transferBucket() {\n    this.bucket.forEach((bug) => {\n      this.passToChild(bug)\n    })\n    this.bucket = null\n  }\n\n  query(rect) {\n    if (!this.boundary.intersects(rect)) {\n      return []\n    }\n\n    if (rect.encompasses(this.boundary)) {\n      return this.gather(rect)\n    }\n\n    if (this.divided) {\n      return [\n        ...this.regions.nw.query(rect),\n        ...this.regions.ne.query(rect),\n        ...this.regions.sw.query(rect),\n        ...this.regions.se.query(rect),\n      ]\n    } else {\n      return this.bucket\n    }\n  }\n\n  gather(rect) {\n    if (this.divided) {\n      return [\n        ...this.regions.nw.gather(rect),\n        ...this.regions.ne.gather(rect),\n        ...this.regions.sw.gather(rect),\n        ...this.regions.se.gather(rect),\n      ]\n    } else {\n      return this.bucket\n    }\n  }\n}\n\nexport class Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x\n    this.y = y\n    this.w = w\n    this.h = h\n  }\n\n  contains(point) {\n    const r = this\n    return (\n      point.x > r.x - r.w &&\n      point.x < r.x + r.w &&\n      point.y > r.y - r.h &&\n      point.y < r.y + r.h\n    )\n  }\n\n  intersects(rect) {\n    const r = this\n    return !(\n      rect.x - rect.w > r.x + r.w ||\n      rect.x + rect.w < r.x - r.w ||\n      rect.y - rect.h > r.y + r.h ||\n      rect.y + rect.h < r.y - r.h\n    )\n  }\n\n  encompasses(rect) {\n    const r = this\n    return (\n      rect.x - rect.w >= r.x - r.w &&\n      rect.x + rect.w <= r.x + r.w &&\n      rect.y - rect.h >= r.y - r.h &&\n      rect.y + rect.h <= r.y + r.h\n    )\n  }\n}\n\nQtree.capacity = 4\n","import WebGlElement from '../../tools/webglelement'\nimport { Bug } from './vehicles/bugs'\n\nexport class Base {\n  constructor(world, team, x, y, energy) {\n    this.x = x != null ? x : Math.random()\n    this.y = y != null ? y : Math.random()\n    this.world = world\n    this.energy = energy || 0\n    this.reserves = 0\n    this.team = team\n    this.saveForKiller = false\n    this.saveForGuard = false\n  }\n\n  getEnergy(energy) {\n    this.energy += energy * (1 - Base.savingRate)\n    this.reserves += energy * Base.savingRate\n  }\n\n  sendEnergy(amount) {\n    let energy = 0\n    if (this.energy > amount) {\n      energy = amount\n      this.energy -= amount\n    } else {\n      energy = this.energy\n      this.energy = 0\n    }\n    return energy\n  }\n\n  work() {\n    const { Bugs, Killers, Guards } = this.world.register\n    if (!this.saveForKiller && !this.saveForGuard) {\n      if (this.energy > Base.energyBuffer) {\n        Bugs.create(this.team, this.x, this.y)\n        this.energy--\n      }\n    } else {\n      if (this.saveForKiller && this.energy > 10) {\n        Killers.create(this.team, this.x, this.y)\n        this.energy -= 10\n        this.saveForKiller = false\n      }\n      if (this.saveForGuard && this.energy > 40) {\n        Guards.create(this.team, this.x, this.y)\n        this.energy -= 40\n        this.saveForGuard = false\n      }\n    }\n    if (this.reserves > 10) {\n      Killers.create(this.team, this.x, this.y)\n      this.reserves -= 10\n    }\n  }\n\n  getDistance(to) {\n    return Math.sqrt((to.y - this.y) ** 2 + (to.x - this.x) ** 2)\n  }\n  getManhattanDistance(to) {\n    return (to.y - this.y) ** 2 + (to.x - this.x) ** 2\n  }\n}\n\nexport default class Bases extends WebGlElement {\n  constructor() {\n    super()\n    this.elements = []\n    this.register = {}\n    this.world = null\n  }\n\n  setup(gl, world) {\n    this.world = world\n\n    const blue = new Base(this.world, Bug.team.blue, 0.5, 0.8, 30)\n    this.elements.push(blue)\n    this.register[Bug.team.blue] = blue\n\n    const red = new Base(this.world, Bug.team.red, 0.5, 0.2, 30)\n    this.elements.push(red)\n    this.register[Bug.team.red] = red\n\n    window.addEventListener('click', () => {\n      red.saveForKiller = true\n    })\n\n    const entitySize = Base.size * world.surface\n    const positions = this.getBasesPositions()\n    const colors = this.getBugsTeams()\n    super.setup(world, entitySize, positions, colors)\n  }\n\n  getBasesPositions() {\n    const positions = []\n    this.elements.forEach((base) => {\n      positions.push(base.x, base.y)\n    })\n    return positions\n  }\n\n  getBugsTeams() {\n    const teams = []\n    this.elements.forEach((base) => {\n      teams.push(1, base.team)\n    })\n    return teams\n  }\n\n  draw() {\n    //super.draw(this.elements.length)\n  }\n\n  update() {\n    this.elements.forEach((b) => b.work())\n  }\n}\n","import WebGlElement from '../../../tools/webglelement'\nimport { generateQuadTree, Rectangle } from '../../../tools/qtree'\nimport { Killer } from './killers'\n\nexport class Vehicle {\n  constructor(world, team, x, y, maxSpeed, energyLimit) {\n    this.x = x != null ? x : Math.random()\n    this.y = y != null ? y : Math.random()\n    this.vX = Math.random() - 0.5\n    this.vY = Math.random() - 0.5\n    this.engergyLimit = energyLimit\n    this.energy = Math.random() * 0.8 * energyLimit + 0.2 * energyLimit\n    this.team = team\n    this.home = { x: 0.5, y: this.team === 0 ? 0.2 : 0.8 }\n    this.maxSpeed = maxSpeed\n    this.world = world\n  }\n\n  move() {\n    this.x += this.vX / this.maxSpeed\n    this.y += this.vY / this.maxSpeed\n\n    // Check out of borders\n    if (this.x < 0) {\n      this.vX *= -1\n      this.x *= -1\n    } else if (this.x > 1) {\n      this.vX *= -1\n      this.x = -this.x + 2\n    }\n    if (this.y < 0) {\n      this.vY *= -1\n      this.y *= -1\n    } else if (this.y > 1) {\n      this.vY *= -1\n      this.y = -this.y + 2\n    }\n  }\n\n  // interact(qtree, otherSize) {\n  //   const minTouchDistance = Bug.size / 2 + otherSize / 2\n  //   const surfaceToSearch = new Rectangle(\n  //     this.x,\n  //     this.y,\n  //     minTouchDistance,\n  //     minTouchDistance\n  //   )\n  //   const nearNeighboors = qtree\n  //     .query(surfaceToSearch)\n  //     .filter((n) => n !== this)\n\n  //   nearNeighboors.forEach((neighboor) => {\n  //     if (this.getDistance(neighboor) < minTouchDistance) {\n  //       if (neighboor.team !== this.team) {\n  //         this.energy = this.energy * 0.98 - 0.01\n  //       }\n  //     }\n  //   })\n  // }\n\n  eat() {\n    const ground = this.world.register.Ground\n    const harvest = ground.collect(this)\n    this.energy = Math.min(this.engergyLimit, this.energy + harvest)\n    return this\n  }\n\n  findFood() {\n    const ground = this.world.register.Ground\n    const [xAttraction, yAttraction] = ground.inspectSurroundingFertility(this)\n    this.vX += Math.min(1, xAttraction) / 20\n    this.vY += Math.min(1, yAttraction) / 20\n\n    const magnitude = this.vX ** 2 + this.vY ** 2\n    if (magnitude > 1) {\n      this.vX /= magnitude\n      this.vY /= magnitude\n    }\n  }\n\n  goHome() {\n    this.goTowardsTarget(this.home)\n  }\n\n  goTowardsTarget(target) {\n    const [vectorX, vectorY] = this.normalize(\n      target.x - this.x,\n      target.y - this.y\n    )\n\n    const steering = {\n      x: vectorX - this.vX,\n      y: vectorY - this.vY,\n    }\n\n    this.vX += steering.x * 0.01\n    this.vY += steering.y * 0.01\n\n    const [vX, vY] = this.normalize(this.vX, this.vY, true)\n\n    this.vX = vX\n    this.vY = vY\n  }\n\n  normalize(x, y, preserveBelowOne = false) {\n    const magnitude = x ** 2 + y ** 2\n    if (preserveBelowOne && magnitude < 1) {\n      return [x, y]\n    }\n    return [x / magnitude, y / magnitude]\n  }\n\n  getDistance(to) {\n    return Math.sqrt((to.y - this.y) ** 2 + (to.x - this.x) ** 2)\n  }\n  getManhattanDistance(to) {\n    return (to.y - this.y) ** 2 + (to.x - this.x) ** 2\n  }\n}\n","import WebGlElement from '../../../tools/webglelement'\nimport { generateQuadTree, Rectangle } from '../../../tools/qtree'\n\nexport default class SpeciesContainer extends WebGlElement {\n  constructor(initialPopulation, entityType) {\n    super()\n\n    this.individuals = []\n    this.world = null\n\n    this.initialPopulation = initialPopulation\n    this.entityType = entityType\n  }\n\n  setup(gl, world) {\n    this.world = world\n\n    for (let i = 0; i < this.initialPopulation; i += 2) {\n      this.individuals.push(\n        new this.entityType(this.world, this.entityType.team.red)\n      )\n      this.individuals.push(\n        new this.entityType(this.world, this.entityType.team.blue)\n      )\n    }\n\n    const entitySize = Math.floor(this.entityType.size * world.surface)\n    super.setup(world, entitySize)\n  }\n\n  getPotentialTouching(other) {\n    const minTouchDistance =\n      this.entityType.size / 2 + other.constructor.size / 2\n    const surfaceToSearch = new Rectangle(\n      other.x,\n      other.y,\n      minTouchDistance,\n      minTouchDistance\n    )\n    const nearNeighboors = this.qtree.query(surfaceToSearch)\n\n    return [nearNeighboors, minTouchDistance]\n  }\n\n  getPositions() {\n    const positions = []\n    this.individuals.forEach((i) => {\n      positions.push(i.x, i.y)\n    })\n    return positions\n  }\n\n  getEnergy() {\n    const energy = []\n    this.individuals.forEach((i) => {\n      energy.push(i.energy)\n    })\n    return energy\n  }\n\n  getTeams() {\n    const teams = []\n    this.individuals.forEach((i) => {\n      teams.push(i.team)\n    })\n    return teams\n  }\n\n  draw() {\n    const newPositions = this.getPositions()\n    const energy = this.getEnergy()\n    const teams = this.getTeams()\n    const newEnergyAndTeamColors = energy.reduce((acc, energy, index) => {\n      acc.push(energy, teams[index])\n      return acc\n    }, [])\n    super.draw(this.individuals.length, newPositions, newEnergyAndTeamColors)\n  }\n\n  create(team, x, y) {\n    this.individuals.push(new this.entityType(this.world, team, x, y))\n  }\n\n  prepareUpdate() {\n    this.qtree = generateQuadTree(this.individuals, 0, 0, 1, 1)\n  }\n}\n","import WebGlElement from '../../../tools/webglelement'\nimport { generateQuadTree, Rectangle } from '../../../tools/qtree'\nimport { Killer } from './killers'\nimport { Base } from '../base'\nimport { Vehicle } from './vehicle'\nimport SpeciesContainer from './speciesContainer'\n\nexport class Guard extends Vehicle {\n  constructor(world, team, x, y) {\n    super(world, team, x, y, Guard.maxSpeed, Guard.energyLimit)\n    this.task = Guard.activity.gather\n  }\n\n  alter() {\n    this.energy = this.energy - 0.001\n    return this\n  }\n\n  interact(species) {\n    const [nearNeighboors, minTouchDistance] = species.getPotentialTouching(\n      this\n    )\n\n    nearNeighboors.forEach((neighboor) => {\n      if (this.getDistance(neighboor) < minTouchDistance) {\n        if (neighboor.team !== this.team) {\n          if (neighboor.constructor.name === 'Killer') {\n            this.energy = this.energy * 0.99 - 0.008\n          } else {\n            this.energy = this.energy * 0.98 - 0.01\n          }\n        }\n      }\n    })\n    return this\n  }\n\n  work() {\n    if (this.energy > 2) {\n      if (this.task === Guard.activity.attack) {\n        this.attack()\n      } else {\n        this.patrol()\n      }\n    } else {\n      this.task = Guard.activity.goHome\n      this.goHome()\n    }\n    return this\n  }\n\n  patrol() {\n    const qtreeKillers = this.world.register.Killers.qtree\n    const surfaceToSearch = new Rectangle(\n      this.home.x,\n      this.home.y,\n      Base.defenseArea,\n      Base.defenseArea\n    )\n\n    const nearNeighboors = qtreeKillers\n      .query(surfaceToSearch)\n      .filter((k) => k.team !== this.team)\n      .filter((k) => k.getDistance(this.home) < Base.defenseArea)\n\n    const [target, dist] = nearNeighboors.reduce(\n      (nearest, cur) => {\n        const dist = this.getDistance(cur)\n        if (dist < nearest[1]) {\n          nearest = [cur, dist]\n        }\n        return nearest\n      },\n      [null, Infinity]\n    )\n\n    if (target) {\n      this.target = target\n      this.task = Guard.activity.attack\n      this.goTowardsTarget(this.target)\n    }\n  }\n\n  attack() {\n    if (this.target && this.target.energy > 0) {\n      this.goTowardsTarget(this.target)\n    } else {\n      this.target = null\n      this.task = Guard.activity.patrol\n    }\n  }\n\n  goHome() {\n    const Bases = this.world.register.Bases\n    if (this.getDistance(this.home) < 0.03) {\n      this.energy += Bases.register[this.team].sendEnergy(Guard.energyTransfer)\n      this.task = Guard.activity.patrol\n      return\n    }\n    super.goHome()\n  }\n}\n\nGuard.team = { red: 0, blue: 1 }\nGuard.activity = { attack: 0, patrol: 1, goHome: 2 }\nGuard.perceptionLimit = 0.1\nGuard.energyTransfer = 5\nGuard.energyLimit = 10\n\nexport default class Guards extends SpeciesContainer {\n  constructor(initialPopulation) {\n    super(initialPopulation, Guard)\n  }\n\n  update() {\n    const { Guards, Killers, Bases } = this.world.register\n\n    this.individuals.forEach((k) => k.move())\n    this.individuals.forEach((k) => {\n      k.alter().interact(Guards).interact(Killers).work()\n    })\n\n    this.individuals = this.individuals.filter((k) => k.energy > 0)\n\n    if (!this.individuals.some((g) => g.team === Guard.team.red)) {\n      Bases.elements.find((b) => b.team === Guard.team.red).saveForGuard = true\n    }\n    if (!this.individuals.some((g) => g.team === Guard.team.blue)) {\n      Bases.elements.find((b) => b.team === Guard.team.blue).saveForGuard = true\n    }\n  }\n}\n","import WebGlElement from '../../tools/webglelement'\nimport { Matrix4 } from '../../tools/cuon-matrix'\nexport default class Ground extends WebGlElement {\n  constructor(itemsPerLine) {\n    super()\n    this.itemsPerLine = itemsPerLine\n    this.tileSize = 1 / itemsPerLine\n    this.program = null\n    this.vertexBuffer = null\n    this.vertexColorBuffer = null\n    this.a_position = null\n    this.a_Color = null\n    this.u_MvpMatrix = null\n    this.gl = null\n    this.ground = []\n    this.colors = []\n    this.world = null\n  }\n\n  generateVerticesGround() {\n    const vertices = []\n    const tileSize = this.tileSize\n    const height = -0.03\n\n    for (let iz = 0; iz < this.itemsPerLine; iz++) {\n      for (let ix = 0; ix < this.itemsPerLine; ix++) {\n        //bottom left\n        let x = ix * tileSize * 2 - 1\n        let z = iz * tileSize * 2 - 1\n        vertices.push(x, height, z)\n\n        // top left\n        x = ix * tileSize * 2 - 1\n        z = (iz + 1) * tileSize * 2 - 1\n        vertices.push(x, height, z)\n\n        //top right\n        x = (ix + 1) * tileSize * 2 - 1\n        z = (iz + 1) * tileSize * 2 - 1\n        vertices.push(x, height, z)\n\n        //bottom left\n        x = ix * tileSize * 2 - 1\n        z = iz * tileSize * 2 - 1\n        vertices.push(x, height, z)\n\n        //top right\n        x = (ix + 1) * tileSize * 2 - 1\n        z = (iz + 1) * tileSize * 2 - 1\n        vertices.push(x, height, z)\n\n        //bottom right\n        x = (ix + 1) * tileSize * 2 - 1\n        z = iz * tileSize * 2 - 1\n        vertices.push(x, height, z)\n      }\n    }\n    return vertices\n  }\n\n  setup(gl, world) {\n    this.gl = gl\n    this.world = world\n\n    for (let iy = 0; iy < this.itemsPerLine; iy++) {\n      for (let ix = 0; ix < this.itemsPerLine; ix++) {\n        // const x = (ix + 0.5) * this.tileSize * 2 - 1\n        // const y = (iy + 0.5) * this.tileSize * 2 - 1\n        // this.ground.push(x, y)\n        this.colors.push(Math.random() * 0.5 + 0.1)\n      }\n    }\n    this.ground = this.generateVerticesGround()\n    //this.generateGround()\n    //console.table(this.ground)\n\n    // const vertexShader = `\n    // attribute vec4 a_Position;\n    // attribute vec4 a_Color;\n    // varying vec4 v_Color;\n    // void main() {\n    //     gl_Position = a_Position;\n    //     gl_PointSize = ${Math.round(this.tileSize * world.surface)}.;\n    //     v_Color = a_Color;\n    // }\n    // `\n\n    // const fragmentShader = `\n    // precision mediump float;\n    // varying vec4 v_Color;\n\n    // void main() {\n    //     gl_FragColor = vec4(v_Color.r*0.2, v_Color.r, v_Color.r*0.3, 1.0);\n\n    // }\n    // `\n\n    const vertexShader = `\n    attribute vec4 a_Position;\n    attribute vec4 a_Color;\n    uniform mat4 u_MvpMatrix;\n    varying vec4 v_Color;\n    void main() {\n        gl_Position = u_MvpMatrix * a_Position;\n        //gl_Position = u_MvpMatrix * vec4(a_Position.x,0.0,a_Position.y, 1.0);\n        gl_PointSize = ${Math.round(this.tileSize * world.surface)}.;\n        v_Color = a_Color;\n    }\n    `\n\n    const fragmentShader = `\n    precision mediump float;\n    varying vec4 v_Color;\n    \n    void main() {\n        gl_FragColor = vec4(v_Color.r*0.2, v_Color.r, v_Color.r*0.3, 1.0);\n       \n    }\n    `\n\n    this.program = this.createProgramm(gl, vertexShader, fragmentShader)\n    gl.useProgram(this.program)\n\n    // setup vertices buffer\n    this.vertexBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.ground),\n      gl.STATIC_DRAW\n    )\n    this.a_Position = gl.getAttribLocation(this.program, 'a_Position')\n\n    this.u_MvpMatrix = gl.getUniformLocation(this.program, 'u_MvpMatrix')\n\n    // setup color buffer\n    this.vertexColorBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexColorBuffer)\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.colors),\n      gl.STATIC_DRAW\n    )\n    this.a_Color = gl.getAttribLocation(this.program, 'a_Color')\n  }\n\n  draw() {\n    const { gl, program } = this\n    gl.useProgram(program)\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n    gl.vertexAttribPointer(this.a_Position, 3, gl.FLOAT, false, 0, 0)\n    gl.enableVertexAttribArray(this.a_Position)\n\n    const colorForEachVertice = new Float32Array(this.colors.length * 6)\n    this.colors.forEach((color, i) => {\n      const index = i * 6\n      colorForEachVertice[index] = color\n      colorForEachVertice[index + 1] = color\n      colorForEachVertice[index + 2] = color\n      colorForEachVertice[index + 3] = color\n      colorForEachVertice[index + 4] = color\n      colorForEachVertice[index + 5] = color\n    })\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexColorBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, colorForEachVertice, gl.STATIC_DRAW)\n    gl.vertexAttribPointer(this.a_Color, 1, gl.FLOAT, false, 0, 0)\n    gl.enableVertexAttribArray(this.a_Color)\n\n    const mvpMatrix = new Matrix4() // Model view projection matrix\n    const modelMatrix = new Matrix4() // Model matrix\n    mvpMatrix\n      .set(this.world.projMatrix)\n      .multiply(this.world.viewMatrix)\n      .multiply(modelMatrix)\n    // Pass the model view projection matrix to u_MvpMatrix\n    //debugger\n    gl.uniformMatrix4fv(this.u_MvpMatrix, false, mvpMatrix.elements)\n\n    gl.drawArrays(gl.TRIANGLES, 0, this.ground.length / 3)\n  }\n\n  update() {\n    for (let i = 0; i < this.colors.length; i++) {\n      this.colors[i] = Math.max(\n        0,\n        Math.min(this.colors[i] + Math.random() / 2000, 1)\n      )\n    }\n  }\n\n  getColorIndex({ x, y }) {\n    const column = Math.floor(x / this.tileSize)\n    const row = Math.floor(y / this.tileSize)\n    const index = row * this.itemsPerLine + column\n    return index\n  }\n\n  collect(vehicule) {\n    const index = this.getColorIndex(vehicule)\n    const value = this.colors[index]\n    if (value > 0.05) {\n      const harvest = this.colors[index] * 0.03\n      this.colors[index] -= harvest\n      return harvest\n    }\n    return 0\n  }\n\n  inspectSurroundingFertility(vehicule) {\n    const index = this.getColorIndex(vehicule)\n    let top = 0\n    let bottom = 0\n    let right = 0\n    let left = 0\n\n    bottom =\n      (this.colors[index - this.itemsPerLine - 1] || 0) +\n      (this.colors[index - this.itemsPerLine] || 0) +\n      (this.colors[index - this.itemsPerLine + 1] || 0)\n\n    top =\n      (this.colors[index + this.itemsPerLine - 1] || 0) +\n      (this.colors[index + this.itemsPerLine] || 0) +\n      (this.colors[index + this.itemsPerLine + 1] || 0)\n\n    left =\n      (this.colors[index - this.itemsPerLine - 1] || 0) +\n      (this.colors[index - 1] || 0) +\n      (this.colors[index + this.itemsPerLine - 1] || 0)\n\n    right =\n      (this.colors[index - this.itemsPerLine + 1] || 0) +\n      (this.colors[index + 1] || 0) +\n      (this.colors[index + this.itemsPerLine + 1] || 0)\n\n    const attractionX = right - left\n    const attractionY = top - bottom\n\n    return [attractionX, attractionY]\n  }\n}\n","import WebGlElement from '../../../tools/webglelement'\nimport { Bug } from './bugs'\nimport { Guard } from './guards'\nimport { Ground } from '../ground'\nimport { generateQuadTree, Rectangle } from '../../../tools/qtree'\nimport SpeciesContainer from './speciesContainer'\nimport { Vehicle } from './vehicle'\n\nexport class Killer extends Vehicle {\n  constructor(world, team, x, y) {\n    super(world, team, x, y, Killer.maxSpeed, Killer.energyLimit)\n    this.task = Killer.activity.gather\n  }\n\n  alter() {\n    this.energy = this.energy * 0.995 - 0.001\n    return this\n  }\n\n  interact(species) {\n    const [nearNeighboors, minTouchDistance] = species.getPotentialTouching(\n      this\n    )\n\n    nearNeighboors.forEach((neighboor) => {\n      if (this.getDistance(neighboor) < minTouchDistance) {\n        if (neighboor.team !== this.team) {\n          this.energy = this.energy * 0.98 - 0.01\n        }\n      }\n    })\n    return this\n  }\n\n  work() {\n    if (this.energy > 2) {\n      this.attack()\n    } else {\n      this.task = Killer.activity.gather\n      this.findFood()\n    }\n    return this\n  }\n\n  attack() {\n    const qtreeBugs = this.world.register.Bugs.qtree\n    if (this.target && this.target.energy > 0) {\n      this.goTowardsTarget(this.target)\n    } else {\n      const surfaceToSearch = new Rectangle(\n        this.x,\n        this.y,\n        Killer.perceptionLimit,\n        Killer.perceptionLimit\n      )\n      const nearNeighboors = qtreeBugs\n        .query(surfaceToSearch)\n        .filter((b) => b.team !== this.team)\n      //debugger\n      const [target, dist] = nearNeighboors.reduce(\n        (nearest, cur) => {\n          const dist = this.getDistance(cur)\n          if (dist < nearest[1]) {\n            nearest = [cur, dist]\n          }\n          return nearest\n        },\n        [null, Infinity]\n      )\n\n      if (target && dist < Killer.perceptionLimit) {\n        this.target = target\n        this.goTowardsTarget(target)\n      }\n    }\n  }\n}\n\nKiller.team = { red: 0, blue: 1 }\nKiller.activity = { gather: 0, bringFood: 1 }\nKiller.energyTransfer = 0.5\nKiller.energyLimit = 10\nKiller.perceptionLimit = 2 * 0.1 //Killer.size\n\nexport default class Killers extends SpeciesContainer {\n  constructor(initialPopulation) {\n    super(initialPopulation, Killer)\n  }\n\n  update() {\n    const { Guards, Killers } = this.world.register\n    this.individuals.forEach((k) => k.move())\n    this.individuals.forEach((k) =>\n      k.alter().interact(Killers).interact(Guards).eat().work()\n    )\n\n    this.individuals = this.individuals.filter((k) => k.energy > 0)\n  }\n}\n","import { Killer } from './killers'\nimport { Vehicle } from './vehicle'\nimport SpeciesContainer from './speciesContainer'\n\nexport class Bug extends Vehicle {\n  constructor(world, team, x, y) {\n    super(world, team, x, y, Bug.maxSpeed, Bug.energyLimit)\n    this.task = Bug.activity.gather\n  }\n\n  alter() {\n    this.energy = this.energy * 0.995 - 0.001\n    return this\n  }\n\n  interact(species) {\n    const [nearNeighboors, minTouchDistance] = species.getPotentialTouching(\n      this\n    )\n\n    const manhattanMinTouchDistance = minTouchDistance ** 2\n    nearNeighboors.forEach((neighboor) => {\n      if (this.getManhattanDistance(neighboor) < manhattanMinTouchDistance) {\n        if (neighboor.team !== this.team) {\n          this.energy = this.energy * 0.98 - 0.01\n        }\n      }\n    })\n\n    return this\n  }\n\n  work() {\n    if (this.task === Bug.activity.gather) {\n      if (this.energy > 0.9) {\n        this.task = Bug.activity.bringFood\n      } else {\n        this.findFood()\n      }\n    }\n    if (this.task === Bug.activity.bringFood) {\n      this.goHome()\n    }\n    return this\n  }\n\n  goHome() {\n    const { Bases } = this.world.register\n    if (this.getDistance(this.home) < 0.03) {\n      this.task = Bug.activity.gather\n      if (this.energy > Bug.energyTransfer) {\n        Bases.register[this.team].getEnergy(Bug.energyTransfer)\n        this.energy -= Bug.energyTransfer\n      } else {\n        Bases.register[this.team].getEnergy(this.energy / 2)\n        this.energy /= 2\n      }\n      return\n    }\n    super.goHome()\n  }\n}\n\nBug.team = { red: 0, blue: 1 }\nBug.activity = { gather: 0, bringFood: 1 }\nBug.energyTransfer = 0.5\nBug.energyLimit = 1\n\nexport default class Bugs extends SpeciesContainer {\n  constructor(initialPopulation) {\n    super(initialPopulation, Bug)\n  }\n\n  update() {\n    const { Bugs, Killers } = this.world.register\n    this.individuals.forEach((b) => b.move())\n    this.individuals.forEach((b) =>\n      b.alter().interact(Bugs).interact(Killers).eat().work()\n    )\n    this.individuals = this.individuals.filter((b) => b.energy > 0)\n  }\n}\n","import Stats from '../tools/stats'\nimport { Matrix4 } from '../tools/cuon-matrix'\nimport { Bug } from './entities/vehicles/bugs'\n\nexport default class World {\n  constructor(surface, selector) {\n    this.surface = surface\n    this.canvas = document.querySelector(selector)\n    this.canvas.width = surface\n    this.canvas.height = surface\n    this.gl = this.canvas.getContext('webgl', { antialias: true })\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0)\n    this.gl.enable(this.gl.BLEND)\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA)\n    this.gl.enable(this.gl.DEPTH_TEST)\n    this.elements = []\n    this.register = {}\n    this.viewMatrix = new Matrix4().setLookAt(0, 5, 1, 0, 0, 0, 0, 1, 0)\n    this.projMatrix = new Matrix4().setPerspective(\n      30,\n      this.canvas.width / this.canvas.height,\n      2,\n      100\n    )\n    this.stats = new Stats(60, '#stats')\n  }\n\n  add(element, name) {\n    this.elements.push(element)\n    this.register[name] = element\n    element.setup(this.gl, this)\n  }\n  draw(time) {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT)\n    this.viewMatrix = new Matrix4().setLookAt(\n      3 * Math.cos(time / 40000),\n      3,\n      3 * Math.sin(time / 40000),\n      0,\n      0,\n      0,\n      0,\n      1,\n      0\n    )\n    this.elements.forEach((element) => {\n      element.draw()\n    })\n  }\n\n  update() {\n    this.elements.forEach((element) => {\n      if (element.prepareUpdate) {\n        element.prepareUpdate()\n      }\n    })\n\n    this.elements.forEach((element) => {\n      element.update()\n    })\n  }\n\n  animate(time) {\n    requestAnimationFrame(this.animate.bind(this))\n    this.generateStats(time)\n    this.update()\n    this.draw(time)\n  }\n\n  generateStats(time) {\n    this.stats.tick(time)\n\n    const total = this.register.Bugs.individuals.length\n    this.stats.add('bugs', total)\n    const reds = this.register.Bugs.individuals.filter(\n      (b) => b.team === Bug.team.red\n    ).length\n    this.stats.add('Reds', reds)\n    this.stats.add('Blues', total - reds)\n    this.stats.add(\n      'Stock reds',\n      this.register.Bases.register[Bug.team.red].energy\n    )\n    this.stats.add(\n      'Stock blues',\n      this.register.Bases.register[Bug.team.blue].energy\n    )\n\n    this.stats.add(\n      'Average energy killers',\n      this.register.Killers.individuals.reduce((acc, cur) => {\n        acc += cur.energy\n        return acc\n      }, 0) / this.register.Killers.individuals.length\n    )\n  }\n}\n","import World from './world/world'\nimport Ground from './world/entities/ground'\nimport Bases, { Base } from './world/entities/base'\nimport Bugs, { Bug } from './world/entities/vehicles/bugs'\nimport Killers, { Killer } from './world/entities/vehicles/killers'\nimport Guards, { Guard } from './world/entities/vehicles/guards'\n\nconst surface = 800\nconst itemsPerLine = 200\nBug.size = 1 / 50\nBug.maxSpeed = 700\nKiller.size = 1 / 30\nKiller.maxSpeed = 500\nGuard.size = 1 / 20\nGuard.maxSpeed = 440\nBase.size = 1 / 10\nBase.savingRate = 0.1\nBase.energyBuffer = 5\nBase.defenseArea = 0.3\n\nconst world = new World(surface, 'canvas')\nwindow.world = world\nconst ground = new Ground(itemsPerLine)\n\nconst bases = new Bases()\nconst bugs = new Bugs(100)\nconst killers = new Killers(2)\nconst guards = new Guards(2)\n\nworld.add(ground, 'Ground')\nworld.add(bugs, 'Bugs')\nworld.add(killers, 'Killers')\nworld.add(guards, 'Guards')\nworld.add(bases, 'Bases')\n\nworld.animate()\n"],"names":["Stats","range","selector","$e4460f07b6b3378dacb49f8cba1ef$var$_classCallCheck","this","total","elements","register","Error","last","count","domElement","linkToDOM","el","document","querySelector","console","warn","createElement","appendChild","time","change","push","shift","updateDom","name","value","loc","average","Math","round","message","concat","_i","_Object$keys","Object","keys","length","prop","innerHTML","Matrix4","opt_src","i","s","d","$eded2b9f65cc363e20e2276ded707$var$_typeof","hasOwnProperty","Float32Array","prototype","setIdentity","e","set","src","other","a","b","ai0","ai1","ai2","ai3","multiply","multiplyVector3","pos","p","v","Vector3","result","multiplyVector4","Vector4","transpose","t","setInverseOf","inv","det","invert","setOrtho","left","right","bottom","top","near","far","rw","rh","rd","ortho","setFrustum","frustum","setPerspective","fovy","aspect","ct","PI","sin","cos","perspective","setScale","x","y","z","scale","setTranslate","translate","setRotate","angle","c","len","rlen","nc","xy","yz","zx","xs","ys","zs","sqrt","rotate","setLookAt","eyeX","eyeY","eyeZ","centerX","centerY","centerZ","upX","upY","upZ","fx","fy","fz","rlf","sx","sy","sz","rls","ux","uy","uz","lookAt","dropShadow","plane","light","mat","dot","dropShadowDirectionally","normX","normY","normZ","planeX","planeY","planeZ","lightX","lightY","lightZ","normalize","g","vertices","indices","Uint8Array","normals","WebGlElement","$fe320e2faed5af747597688dca74785$var$_classCallCheck","program","vertexBuffer","vertexColorBuffer","indexBuffer","a_position","a_Color","a_Normal","u_MvpMatrix","u_Color","u_NormalMatrix","u_LightColor","u_LightDirection","u_AmbientLight","gl","world","entitySize","positions","colors","createProgramm","useProgram","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","$f232bf4861c486209009d06af82ff987$export$vertices","STATIC_DRAW","a_Position","getAttribLocation","ELEMENT_ARRAY_BUFFER","$f232bf4861c486209009d06af82ff987$export$indices","normalsBuffer","$f232bf4861c486209009d06af82ff987$export$normals","getUniformLocation","lightDirection","$eded2b9f65cc363e20e2276ded707$export$Vector3","uniform3fv","uniform3f","newPositions","newColors","vertexAttribPointer","FLOAT","enableVertexAttribArray","mvpMatrix","$eded2b9f65cc363e20e2276ded707$export$Matrix4","modelMatrix","normalMatrix","projMatrix","viewMatrix","uniformMatrix4fv","uniform4fv","drawElements","TRIANGLES","UNSIGNED_BYTE","vertexShaderSource","fragmentShaderSource","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","decodedType","error","a_attribute","buffer","num","generateQuadTree","bugs","minX","minY","maxX","maxY","_step","boundary","Qtree","getBoundary","qt","_iterator","$d29b86bcad91fcc8eba040bf638ebec$var$_createForOfIteratorHelper","n","done","bug","insert","err","f","$d29b86bcad91fcc8eba040bf638ebec$var$_classCallCheck","bucket","regions","divided","gathered","halfWidth","halfHeight","Rectangle","w","h","contains","capacity","subdivide","transferBucket","passToChild","se","ne","sw","nw","_this$boundary","hW","hH","nwSpace","neSpace","swSpace","seSpace","_this","forEach","rect","intersects","encompasses","gather","$d29b86bcad91fcc8eba040bf638ebec$var$_toConsumableArray","query","point","r","Base","team","energy","$b4073a10b1a576a9d10f1e4394c8bd3$var$_classCallCheck","random","reserves","saveForKiller","saveForGuard","savingRate","amount","_this$world$register","Bugs","Killers","Guards","create","energyBuffer","to","pow","Bases","_super","call","blue","$a04fc4e0e65294a16b004422b$export$Bug","red","window","addEventListener","size","surface","getBasesPositions","getBugsTeams","$b4073a10b1a576a9d10f1e4394c8bd3$var$_get","$b4073a10b1a576a9d10f1e4394c8bd3$var$_getPrototypeOf","base","teams","work","Vehicle","maxSpeed","energyLimit","$d7b196237262dbbc183b73343718$var$_classCallCheck","vX","vY","engergyLimit","home","harvest","Ground","collect","min","_ground$inspectSurrou2","$d7b196237262dbbc183b73343718$var$_slicedToArray","inspectSurroundingFertility","xAttraction","yAttraction","magnitude","goTowardsTarget","target","_this$normalize2","vectorX","vectorY","steering","_this$normalize4","preserveBelowOne","arguments","undefined","SpeciesContainer","initialPopulation","entityType","$c70adeac11f1f2dbf738a14109b3a$var$_classCallCheck","individuals","floor","$c70adeac11f1f2dbf738a14109b3a$var$_get","$c70adeac11f1f2dbf738a14109b3a$var$_getPrototypeOf","minTouchDistance","constructor","surfaceToSearch","$d29b86bcad91fcc8eba040bf638ebec$export$Rectangle","qtree","getPositions","getEnergy","getTeams","newEnergyAndTeamColors","reduce","acc","index","$d29b86bcad91fcc8eba040bf638ebec$export$generateQuadTree","Guard","$f53a24f36820cd76ebacd4dd92f4fff$var$_classCallCheck","task","activity","species","_this2","_species$getPotential2","$f53a24f36820cd76ebacd4dd92f4fff$var$_slicedToArray","getPotentialTouching","nearNeighboors","neighboor","getDistance","attack","patrol","goHome","_this3","qtreeKillers","$b4073a10b1a576a9d10f1e4394c8bd3$export$Base","defenseArea","_nearNeighboors$reduc2","filter","k","nearest","cur","dist","Infinity","sendEnergy","energyTransfer","$f53a24f36820cd76ebacd4dd92f4fff$var$_get","$f53a24f36820cd76ebacd4dd92f4fff$var$_getPrototypeOf","perceptionLimit","_super2","move","alter","interact","some","find","itemsPerLine","$cf01618df2142b7acb1be9e07c42d14$var$_classCallCheck","tileSize","ground","iz","ix","iy","generateVerticesGround","colorForEachVertice","color","drawArrays","max","_ref","column","vehicule","getColorIndex","Killer","$b3ed6f9375b2634709a923dbdb7abf60$var$_classCallCheck","$b3ed6f9375b2634709a923dbdb7abf60$var$_slicedToArray","findFood","qtreeBugs","bringFood","eat","Bug","$a04fc4e0e65294a16b004422b$var$_classCallCheck","$a04fc4e0e65294a16b004422b$var$_slicedToArray","manhattanMinTouchDistance","getManhattanDistance","$a04fc4e0e65294a16b004422b$var$_get","$a04fc4e0e65294a16b004422b$var$_getPrototypeOf","World","$dec588506928914821bdb8cd28f5c81c$var$_classCallCheck","canvas","width","height","getContext","antialias","clearColor","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DEPTH_TEST","stats","$e4460f07b6b3378dacb49f8cba1ef$export$default","element","setup","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","prepareUpdate","update","requestAnimationFrame","animate","bind","generateStats","tick","add","reds","$b3ed6f9375b2634709a923dbdb7abf60$export$Killer","$f53a24f36820cd76ebacd4dd92f4fff$export$Guard","$dec588506928914821bdb8cd28f5c81c$export$default","$cf01618df2142b7acb1be9e07c42d14$export$default","bases","$b4073a10b1a576a9d10f1e4394c8bd3$export$default","$a04fc4e0e65294a16b004422b$export$default","killers","$b3ed6f9375b2634709a923dbdb7abf60$export$default","guards","$f53a24f36820cd76ebacd4dd92f4fff$export$default"],"version":3,"file":"Bugs.65c4d776.js.map"}